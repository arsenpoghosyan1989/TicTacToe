{"version":3,"sources":["components/li.js","components/cells.js","App.js","index.js"],"names":["Li","id","xo","clickHandler","style","color","onClick","className","Cells","cells","map","val","key","App","useState","status","setCells","player","setPlayer","winner","setWinner","console","log","currentPlayer","newCells","cell","ended","forEach","checkWinner","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cc521e5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Li = ({ id, xo, clickHandler }) => {\r\n  function checkStatus() {\r\n    return clickHandler(id);\r\n  }\r\n  let crossOrZero = \"\";\r\n  let style = xo === \"x\" ? { color: \"green\" } : { color: \"red\" };\r\n  return (\r\n    <li onClick={checkStatus} className=\"text-center\">\r\n      {<div style={style}>{xo}</div>}\r\n    </li>\r\n  );\r\n};\r\nexport default Li;\r\n","import React from \"react\";\r\nimport Li from \"./li\";\r\n\r\nconst Cells = ({ cells, clickHandler }) => {\r\n  return (\r\n    <ul className=\"nobull\">\r\n      {cells.map(({ val, id }) => {\r\n        return (\r\n          <Li\r\n            key={id}\r\n            id={id}\r\n            xo={val}\r\n            clickHandler={clickHandler}\r\n            className=\"text-center\"\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nexport default Cells;\r\n","import React, { useState } from \"react\";\nimport Cells from \"./components/cells\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [cells, setCells] = useState([\n    { val: \"\", status: true, id: 1 },\n    { val: \"\", status: true, id: 2 },\n    { val: \"\", status: true, id: 3 },\n    { val: \"\", status: true, id: 4 },\n    { val: \"\", status: true, id: 5 },\n    { val: \"\", status: true, id: 6 },\n    { val: \"\", status: true, id: 7 },\n    { val: \"\", status: true, id: 8 },\n    { val: \"\", status: true, id: 9 },\n  ]);\n  const [player, setPlayer] = useState(\"x\");\n  const [winner, setWinner] = useState(false);\n\n  function clickHandler(id) {\n    console.log(player);\n    let currentPlayer = player;\n    let newCells = cells.map((cell) => {\n      if (cell.status && cell.id === id) {\n        setPlayer(player === \"x\" ? \"o\" : \"x\");\n        return { val: player, status: false, id };\n      }\n      return cell;\n    });\n    setCells(newCells);\n    checkWinner(newCells, currentPlayer);\n  }\n  function checkWinner(newCells, player) {\n    if (\n      (newCells[0].val === player &&\n        newCells[1].val === player &&\n        newCells[2].val === player) ||\n      (newCells[3].val === player &&\n        newCells[4].val === player &&\n        newCells[5].val === player) ||\n      (newCells[6].val === player &&\n        newCells[7].val === player &&\n        newCells[8].val === player) ||\n      (newCells[0].val === player &&\n        newCells[3].val === player &&\n        newCells[6].val === player) ||\n      (newCells[1].val === player &&\n        newCells[4].val === player &&\n        newCells[7].val === player) ||\n      (newCells[2].val === player &&\n        newCells[5].val === player &&\n        newCells[8].val === player) ||\n      (newCells[0].val === player &&\n        newCells[4].val === player &&\n        newCells[8].val === player) ||\n      (newCells[2].val === player &&\n        newCells[4].val === player &&\n        newCells[6].val === player)\n    ) {\n      setWinner(player);\n    } else {\n      let ended = true;\n      newCells.forEach(({ status }) => {\n        if (status === true) ended = false;\n      });\n      if (ended) {\n        console.log(newCells);\n        setWinner(\"no One\");\n      }\n    }\n  }\n  return (\n    <div>\n      {winner === false ? (\n        <div>\n          <Cells cells={cells} clickHandler={clickHandler} />\n          <h1>next player is: {player}</h1>\n        </div>\n      ) : (\n        <h2>winner is {winner}</h2>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}